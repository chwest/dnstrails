#!/usr/bin/python
import json
import requests
import random
import sys
import pandas as pd

## response = requests.get("https://www.receitaws.com.br/v1/cnpj/27865757000102")
## data = json.loads(response.content.decode(response.encoding))
## df = pd.DataFrame([data])
## print(df)

pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)
pd.set_option('display.width', None)
pd.set_option('display.max_colwidth', None)

for domain in sys.argv[1:]:
    print(' ')
    print("DNS History for {}".format(domain))
    keys = ['key','key','key','key','key','key','key']
    random_index = random.randint(0,len(keys)-1)
    key = keys[random_index]
    
    header={'apikey': key}
    url = "https://api.securitytrails.com/v1/history/{}/dns/a".format(domain)
    response = requests.get(url, headers=header)
    data = response.json()['records']
    
    for record in data:
        first_seen = record['first_seen']
        last_seen = record['last_seen']
        organizations = record['organizations']
        values = record['values']
        #record['ips'] = []
        for value in values:
            value.pop('ip_count')
            #record['ips'].append(value['ip'])
            #value.pop('ip')
        #record.pop('values')
        record.pop('type')
        
    df = pd.json_normalize(data, record_path=['values'], meta=['organizations', 'first_seen', 'last_seen'])
    df = pd.DataFrame(df)
    #df = df.loc[:, ~df.columns.isin(['values', 'type'])]
    print(df.to_string(index=False))
